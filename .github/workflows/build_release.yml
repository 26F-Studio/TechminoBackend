name: Build release
on: workflow_dispatch
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
jobs:
  build_release:
    name: Ubuntu 18.04
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Drogon source code
        uses: actions/checkout@v2
        with:
          repository: an-tao/drogon
          submodules: true
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          # Installing packages might fail as the github image becomes outdated
          sudo apt update
          # These aren't available or don't work well in vcpkg
          sudo apt install libjsoncpp-dev uuid-dev openssl libssl-dev zlib1g-dev postgresql-all libsqlite3-dev
          sudo apt install libbrotli-dev

      - name: Install GTest
        run: |
          wget https://github.com/google/googletest/archive/release-1.10.0.tar.gz
          tar xf release-1.10.0.tar.gz
          cd googletest-release-1.10.0
          cmake .
          make
          sudo make install

      - name: Create Build Environment & Configure Cmake
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        shell: bash
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          mkdir drogon
          cd drogon
          cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_TESTING=on

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cd drogon
          sudo make && sudo make install

      - name: Checkout Backend source code
        uses: actions/checkout@v2

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE
